version: '3.8'

services:
  broker:
    image: ghcr.io/algodex/algodex-service:${GHCR_TARGET}
    x-aws-pull_credentials: ${GHCR_SECRET_ARN}
    entrypoint: npm
    depends_on:
      - couchdb
    env_file:
      - ${ENV_FILE}
    environment:
      - APP_PATH=broker
    command:
      - start
  worker-price-tinyman:
    image: ghcr.io/algodex/algodex-service:${GHCR_TARGET}
    x-aws-pull_credentials: ${GHCR_SECRET_ARN}
    entrypoint: npm
    depends_on:
      - couchdb
    env_file:
      - ${ENV_FILE}
    environment:
      - APP_PATH=workers/tinyman
    command:
      - start
  worker-price-pactfi:
    image: ghcr.io/algodex/algodex-service:${GHCR_TARGET}
    x-aws-pull_credentials: ${GHCR_SECRET_ARN}
    entrypoint: npm
    env_file:
      - ${ENV_FILE}
    depends_on:
      - couchdb
    environment:
      - APP_PATH=workers/pactfi
    command:
      - start
  worker-blocks:
    image: ghcr.io/algodex/algodex-service:${GHCR_TARGET}
    x-aws-pull_credentials: ${GHCR_SECRET_ARN}
    entrypoint: npm
    env_file:
      - ${ENV_FILE}
    depends_on:
      - couchdb
    environment:
      - APP_PATH=worker
    command:
      - start
  service:
    image: ghcr.io/algodex/algodex-service:${GHCR_TARGET}
    x-aws-pull_credentials: ${GHCR_SECRET_ARN}
    entrypoint: npm
    env_file:
      - ${ENV_FILE}
    depends_on:
      - couchdb
    environment:
      - APP_PATH=socket
    command:
      - start
    ports:
      - "9001:9001"
  # Storage and Events
  couchdb:
    image: couchdb
    ports:
      - '5984:5984'
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=dex
    volumes:
      - couchdb_vol:/opt/couchdb/data
volumes:
  couchdb_vol:
x-aws-cloudformation:
  Description: Algodex Pub/Sub Services
  Outputs:
    LBEndpoint:
      Description: "Load balancer endpoint for services"
      Value:
        Fn::GetAtt: [ LoadBalancer, DNSName ]
