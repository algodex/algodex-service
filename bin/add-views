#!/usr/bin/env node

const PouchDB = require('pouchdb');
PouchDB.plugin(require('pouchdb-erase'));

const dbEndpoint = 'http://localhost:5984';
const dbUsername = 'admin';
const dbPassword = 'dex';

const databases = [
  {
    dbName: 'blocks',
    design: {
      _id: '_design/blocks',
      views: {
        orders: {
          map: require('../views/blocks/orders-map').toString(),
          reduce: require('../views/blocks/orders-reduce').toString(),
        },
        tradeHistory: {
          map: require('../views/blocks/tradeHistory-map').toString(),
        },
        ohlc: {
          map: require('../views/chart/map').toString(),
          reduce: require('../views/chart/reduce').toString(),
        },
      },
    },
  },
  {
    dbName: 'formatted_escrow',
    design: {
      _id: '_design/formatted_escrow',
      views: {
        orders: {
          map: require('../views/formatted_orders/orders-map').toString(),
        },
      },
    },
  },
  {
    dbName: 'escrow',
    design: {
      _id: '_design/escrow',
      views: {
        escrowAddr: {
          map: require('../views/escrow/escrowAddr-map').toString(),
          reduce: '_count',
        },
      },
    },
  },
  {
    dbName: 'assets',
    design: {
      _id: '_design/assets',
      views: {
        assets: {
          map: require('../views/assets/assets-map').toString(),
        },
      },
    },
  },
  {
    dbName: 'verified_account',
    design: {
      _id: '_design/verified_account',
      views: {
        verifiedAddr: {
          map: require('../views/verified_account/verifiedAddr-map').toString(),
        },
      },
    },
  },
];

databases.forEach( (database) => {
  const initializedDB = new PouchDB(dbEndpoint + '/' + database.dbName, {
    auth: {
      username: dbUsername,
      password: dbPassword,
    },
  });

  initializedDB.get(database.design._id).then((res)=>{
    console.log('Index Found');
    initializedDB.put({...database.design, _rev: res._rev}).catch((e)=>{
      console.log('Update error', e);
      throw e;
    });
  }).catch((e)=>{
    console.log('Error Fetching Index', e);
    if (e.error === 'not_found') {
      initializedDB.put({...database.design}).catch((e)=>{
        console.log('Create Error', e);
      });
    } else {
      throw e;
    }
  });
});


