version: '3.8'

services:
  html:
    image: nginx
    depends_on:
      - service
    volumes:
      - ./index.html:/var/www/html/index.html
      - ./.docker/config/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
  broker:
    image: ghcr.io/algodex/algodex-node-gradation:${GHCR_TARGET}
    entrypoint: npm
    depends_on:
      - algorand
      - events
      - queues
      - couchdb
    environment:
      - APP_CONTEXT=broker
      - REDIS_ADDRESS=events
      - REDIS_PORT=6379
      - REDIS_MQ_ADDRESS=queues
      - REDIS_MQ_PORT=6379
      - ALGORAND_EXPLORER=https://testnet.algoexplorerapi.io
      - ALGORAND_DAEMON=http://localhost
      - ALGORAND_DAEMON_TOKEN=308c0179ca4846ffaf06de22b1231b181313973a081721ea357c612a3bbcef04
      - ALGORAND_DAEMON_PORT=8080
    command:
      - start
  worker:
    image: ghcr.io/algodex/algodex-node-gradation:${GHCR_TARGET}
    entrypoint: npm
    environment:
      - APP_CONTEXT=worker
      - REDIS_ADDRESS=events
      - REDIS_PORT=6379
      - REDIS_MQ_ADDRESS=queues
      - REDIS_MQ_PORT=6379
      - COUCHDB_URL=http://admin:dex@couchdb:5984/dex
      - ALGORAND_EXPLORER=https://testnet.algoexplorerapi.io
    depends_on:
      - events
      - queues
      - couchdb
    command:
      - start
  service:
    image: ghcr.io/algodex/algodex-node-gradation:${GHCR_TARGET}
    entrypoint: npm
    depends_on:
      - events
      - queues
      - couchdb
    environment:
      - APP_CONTEXT=socket
      - REDIS_ADDRESS=events
      - REDIS_PORT=6379
      - REDIS_MQ_ADDRESS=queues
      - REDIS_MQ_PORT=6379
      - ALGORAND_EXPLORER=https://testnet.algoexplorerapi.io
    command:
      - start
    ports:
      - "9001:9001"

  algorand:
    build:
      context: .docker/algo
    deploy:
      resources:
        limits:
#          cpus: '0.50'
          memory: 2048M
        reservations:
#          cpus: '0.25'
          memory: 1024M
    ports:
      - "8080:8080"
    volumes:
      - ${ALGORAND_DATA}:/root/node/data

  # Storage and Events
  events:
    image: redis:6.2
    volumes:
      - ./.docker/config/redis.conf:/usr/local/etc/redis/redis.conf
      - events_vol:/data
  queues:
    image: redis:6.2
    volumes:
      - ./.docker/config/redis.conf:/usr/local/etc/redis/redis.conf
      - queue_vol:/data
  couchdb:
    image: couchdb
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=dex
    volumes:
      - ${COUCHDB_DATA}:/opt/couchdb/data
volumes:
  events_vol:
  queue_vol:
